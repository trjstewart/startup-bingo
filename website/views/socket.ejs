<!doctype html>
<html class="no-js" lang="">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title></title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="apple-touch-icon" href="apple-touch-icon.png">

    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.5/socket.io.min.js"></script>

    <!--DANK AS FUCK EMOJIS-->
    <script src="/js/emojify.min.js"></script>


    <script>
        var socket = io('http://localhost/');
    </script>
    <style>
        body {
            padding-top: 50px;
            padding-bottom: 20px;
        }
    </style>
    <link rel="stylesheet" href="css/bootstrap-theme.min.css">
    <link rel="stylesheet" href="css/main.css">

    <script src="js/vendor/modernizr-2.8.3.min.js"></script>
</head>
<body>
<!--[if lt IE 8]>

<p class="browserupgrade">filthy ie user gtfo</p>
<![endif]-->

<div class="top">
    <div class="room-select">

        <form id="roomSubmit">
            <input type="text" id="name" name="name" placeholder="Username eg. 420 blaze lord supreme"><br>
            <input type="text" id="room" name="room" placeholder="Event name eg. creative event or something"><br>
            <input type="submit" value="Submit">
        </form>
        <div class="rs-error"></div>
    </div>


    <div class="words-container">

    </div>
</div>

<div class="console">

</div>

<div class="input">
    <form id="message-submit">
        <input id="m" type="sub" autocomplete="off"/><input type="submit" value="Submit">
    </form>
</div>

<!--<div class="left">-->

<!--<div class="room-select">-->
<!--<form id="roomSubmit">-->
<!--<input type="text" id="name" name="name" placeholder="Username eg. 420 blaze lord supreme"><br>-->
<!--<input type="text" id="room" name="room" placeholder="Event name eg. creative event or something"><br>-->
<!--<input type="submit" value="Submit">-->
<!--</form>-->
<!--</div>-->

<!--<div class="words-container">-->

<!--</div>-->


<!--</div>-->

<!--<div class="right">-->
<!--<div class="events-log">-->

<!--</div>-->
<!--<form id="message-submit">-->
<!--<input id="m" type="sub" autocomplete="off" /><input type="submit" value="Submit">-->
<!--</form>-->
<!--</div>-->

<!-- /container -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="js/vendor/jquery-1.11.2.min.js"><\/script>')</script>

<script src="js/vendor/bootstrap.min.js"></script>

<script src="js/plugins.js"></script>

<script>

    var words,user;
    $('.words-container').hide();

    /*
     Event handler for room submit form
     currently no validation, will add later
     emits join room, and words. words returns array of words for bingo board
     */

    $("#roomSubmit").submit(function (event) {
        event.preventDefault();
        var name = $("#name").val();
        var room = $("#room").val();
        user = name;
        socket.emit('join_room', {hashtag: room, username: name});

    });

    /*
     Message submit event handler
     some cheeky shiz right here lad ;)
     */

    $('#message-submit').submit(function (event) {
        event.preventDefault();
        var message = $("#m").val();

        if (/\S/.test(message)) {
            if (message.substring(0, 1) === '/') {
                console.log('you trying some cheeky shit mate?');
                //never made a cheeky chat thingo b4 plz b gentle
                var command = message.substring(1);
                console.log(command);
                switch (command) {
                    case "baxter":
                        console.log('baxterrr');
                        message = '<img src="http://www.orionvm.com/wp-content/uploads/2014/10/headshots_orionvm_steve-baxter.jpg" alt="hi im steve" height="21" width="21">';
                        break;
                    case "leaderboard":
                        console.log('getting scores...');
                        socket.emit('get-scores');
                        breakF
                }
                //more coming soon ;) ;) ;) ;) ;) ;)

            }

            $("#m").val('');

            socket.emit('message', message);
        }

    });

    /*
     Bingo board event handler
     */
    //on bingo square click
    $('body').on('click', '.word', function () {
        var text = $(this).text();
        socket.emit('word-found', text);
        $(this).addClass('word-clicked');

    });

    /*
     saves words to words var, could be useful later. displays bingo board
     */
    socket.on('words', function (data) {
        console.log(data);
        words = data.data;
        insertBingoBoard(words);
    });


    socket.on('join_room', function (data) {
        console.log(data);

        if(data.result){

            $('.room-select').fadeOut();
            socket.emit('words');
            $('.words-container').fadeIn();
        }else{
            printToLogLocal('Username already exists!');
        }


    });

    /*
     player found word socket event.
     */
    //data recieved {user: players[socket.id].userName, word: word}
    socket.on('player-found-word', function (data) {
        printToConsole('<strong>' + data.user + ' found ' + data.word + '</strong>', data.user);
    });

    /*
     gets current leaderboard
     */
    socket.on('get-scores', function (data) {
        console.log(data.data);
        printScores(data.data);

    });

    /*
     player joined socket event
     */
    socket.on('player-joined', function (data) {
//        printToLogLocal('<strong> Player ' + data + ' joined </strong>');
        printToConsole('<strong> Player ' + data + ' joined </strong>', data);
    });

    /*
     message socket event
     */
    socket.on('message', function (message) {
//        (message.user===user) ? printToLogLocal('<strong>' + message.user + ':</strong> ' + message.message) : printToLogServer('<strong>' + message.user + ':</strong> ' + message.message);
        printToConsole('<strong>' + message.user + ':</strong> ' + message.message, message.user);

    });

    /*
     winner found socket event
     */
    socket.on('winner-found', function (message) {
        printToLogServer(':fire: ' + message.winner + ' HAS WON THEIR BOARD :fire:')
    });

    /*
     restart game
     */
    socket.on('restart', function () {
        $('.words-container').empty();
        socket.emit('words');
    });

    /*
     bingo board function.
     Words: string array of words to display on board
     */
    function insertBingoBoard(words) {
        var temp;
        for (var i = 0; i < words.length; i++) {
            if (!(i % 4)) {
                temp = i;
                $("<div class='" + i + "'><div class='words-row'></div></div>").appendTo(".words-container");
            }
            var d = "<div class='col-md-3 col-xs-3 col-sm-3 word'><p>" + words[i] + "</p></div> ";
            $(d).hide().appendTo("." + temp + "").fadeIn(500);
        }

    }

    /*
     Function which pints string input to message log
     string: string which contains what to write
     */

    function printToConsole(string, source){
        (source===user)?printToLogLocal(string):printToLogServer(string);
    }

    function printToLogLocal(string) {
        var t = (emojify.replace('<div class="local-m"><p>' + string + '</p></div><br>'))
        console.log(t)

        $(t).hide().appendTo(".console").fadeIn(500);
        updateLogScroll();
    }

    function printToLogServer(string){
                                                                    //BRRT BRRT BRRT
        var t = emojify.replace('<div class="server-m"><p>' + string + '</p></div><br><br><br><br>')
        console.log(t);
        $(t).hide().appendTo(".console").fadeIn(500);
        updateLogScroll();
    }

    /*
     print scores
     */
    function printScores(scores) {
        var scoresDiv = '';
        for (var i = 0; i < scores.length; i++) {
            scoresDiv += scores[i].username + ' : ' + scores[i].score + '<br>';
        }
        printToLogLocal(scoresDiv);
    }

    /*
     keeps scroll focused on bottom
     */
    function updateLogScroll() {
        $('.console').stop().animate({
            scrollTop: $('.console')[0].scrollHeight
        }, 800);
    }


</script>

</body>
</html>
